	component wr_arria10_scu4_det_phy is
		port (
			reconfig_write            : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- write
			reconfig_read             : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- read
			reconfig_address          : in  std_logic_vector(9 downto 0)   := (others => 'X'); -- address
			reconfig_writedata        : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- writedata
			reconfig_readdata         : out std_logic_vector(31 downto 0);                     -- readdata
			reconfig_waitrequest      : out std_logic_vector(0 downto 0);                      -- waitrequest
			reconfig_clk              : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- clk
			reconfig_reset            : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- reset
			rx_analogreset            : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- rx_analogreset
			rx_cal_busy               : out std_logic_vector(0 downto 0);                      -- rx_cal_busy
			rx_cdr_refclk0            : in  std_logic                      := 'X';             -- clk
			rx_clkout                 : out std_logic_vector(0 downto 0);                      -- clk
			rx_coreclkin              : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- clk
			rx_datak                  : out std_logic;                                         -- rx_datak
			rx_digitalreset           : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- rx_digitalreset
			rx_disperr                : out std_logic;                                         -- rx_disperr
			rx_errdetect              : out std_logic;                                         -- rx_errdetect
			rx_is_lockedtodata        : out std_logic_vector(0 downto 0);                      -- rx_is_lockedtodata
			rx_is_lockedtoref         : out std_logic_vector(0 downto 0);                      -- rx_is_lockedtoref
			rx_parallel_data          : out std_logic_vector(7 downto 0);                      -- rx_parallel_data
			rx_patterndetect          : out std_logic;                                         -- rx_patterndetect
			rx_runningdisp            : out std_logic;                                         -- rx_runningdisp
			rx_serial_data            : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- rx_serial_data
			rx_seriallpbken           : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- rx_seriallpbken
			rx_std_bitslipboundarysel : out std_logic_vector(4 downto 0);                      -- rx_std_bitslipboundarysel
			rx_std_wa_patternalign    : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- rx_std_wa_patternalign
			rx_syncstatus             : out std_logic;                                         -- rx_syncstatus
			tx_analogreset            : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- tx_analogreset
			tx_cal_busy               : out std_logic_vector(0 downto 0);                      -- tx_cal_busy
			tx_clkout                 : out std_logic_vector(0 downto 0);                      -- clk
			tx_coreclkin              : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- clk
			tx_datak                  : in  std_logic                      := 'X';             -- tx_datak
			tx_digitalreset           : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- tx_digitalreset
			tx_parallel_data          : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- tx_parallel_data
			tx_serial_clk0            : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- clk
			tx_serial_data            : out std_logic_vector(0 downto 0);                      -- tx_serial_data
			unused_rx_parallel_data   : out std_logic_vector(113 downto 0);                    -- unused_rx_parallel_data
			unused_tx_parallel_data   : in  std_logic_vector(118 downto 0) := (others => 'X')  -- unused_tx_parallel_data
		);
	end component wr_arria10_scu4_det_phy;

